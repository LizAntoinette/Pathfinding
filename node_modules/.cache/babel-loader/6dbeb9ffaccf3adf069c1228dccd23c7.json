{"remainingRequest":"/home/alya/project/Pathfinding/node_modules/babel-loader/lib/index.js!/home/alya/project/Pathfinding/node_modules/eslint-loader/index.js??ref--12-0!/home/alya/project/Pathfinding/src/algorithms/astar.js","dependencies":[{"path":"/home/alya/project/Pathfinding/src/algorithms/astar.js","mtime":1682081037952},{"path":"/home/alya/project/Pathfinding/node_modules/cache-loader/dist/cjs.js","mtime":1676881085187},{"path":"/home/alya/project/Pathfinding/node_modules/babel-loader/lib/index.js","mtime":1676881153360},{"path":"/home/alya/project/Pathfinding/node_modules/eslint-loader/index.js","mtime":1676881105757}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGZ1bmN0aW9uIGFzdGFyKGdyaWQsIHN0YXJ0Tm9kZSwgZmluaXNoTm9kZSwgc2l6ZSwgaGV1cmlzdGljKSB7CiAgY29uc3QgY2xvc2VkbGlzdCA9IFtdOwogIGNvbnN0IG9wZW5saXN0ID0gW107CiAgY29uc3Qgc3RhcnRIID0gaGV1cmlzdGljLmZpbmQoaCA9PiBoLm5vZGUgPT09IHN0YXJ0Tm9kZS5wb2ludDIpOwogIHN0YXJ0Tm9kZS5jb3N0ID0gewogICAgRjogMC4wLAogICAgRzogMC4wLAogICAgSDogc3RhcnRILmh2YWwKICB9OwogIGNvbnNvbGUubG9nKCJjbGlja2luZyBhKiIpOwogIG9wZW5saXN0LnB1c2goc3RhcnROb2RlKTsKICB3aGlsZSAob3Blbmxpc3QubGVuZ3RoID4gMCkgewogICAgb3Blbmxpc3Quc29ydCgoYSwgYikgPT4gcGFyc2VGbG9hdChhLmNvc3QuRikgLSBwYXJzZUZsb2F0KGIuY29zdC5GKSk7CiAgICBjb25zdCBjdXJyZW50ID0gb3Blbmxpc3Quc2hpZnQoKTsKICAgIGNsb3NlZGxpc3QucHVzaChjdXJyZW50KTsKICAgIGNvbnNvbGUubG9nKGN1cnJlbnQpOwogICAgaWYgKGN1cnJlbnQucG9pbnQyID09PSBmaW5pc2hOb2RlKSByZXR1cm4gW2Nsb3NlZGxpc3QsIGNhbGN1bGF0ZVBhdGgoY3VycmVudCldOwogICAgY29uc3QgbmVpZ2hib3JzID0gZ2V0QWxsTmVpZ2hib3JzKGdyaWQsIGN1cnJlbnQsIHNpemUpOwogICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuZWlnaGJvcnMubGVuZ3RoOyBpKyspIHsKICAgICAgY29uc3Qgbk5vZGUgPSBuZWlnaGJvcnNbaV07CiAgICAgIGNvbnN0IGhOb2RlID0gaGV1cmlzdGljLmZpbmQoaCA9PiBoLm5vZGUgPT09IG5Ob2RlLnBvaW50Mik7CiAgICAgIG5Ob2RlLmlzVmlzaXRlZCA9IHRydWU7CiAgICAgIGlmIChjbG9zZWRsaXN0LmluY2x1ZGVzKG5Ob2RlKSkgY29udGludWU7CiAgICAgIGxldCB0ZW50YXRpdmVHID0gY3VycmVudC5jb3N0LkcgKyBuTm9kZS5kaXN0YW5jZTsKICAgICAgbk5vZGUucHJldmlvdXNOb2RlID0gY3VycmVudDsKICAgICAgaWYgKHRlbnRhdGl2ZUcgPCBuTm9kZS5kaXN0YW5jZSkgewogICAgICAgIG5Ob2RlLmNvc3QuSCA9IHBhcnNlRmxvYXQoaE5vZGUuaHZhbCk7CiAgICAgICAgbk5vZGUuY29zdC5HID0gcGFyc2VGbG9hdCh0ZW50YXRpdmVHKTsKICAgICAgICBuTm9kZS5jb3N0LkYgPSBwYXJzZUZsb2F0KG5Ob2RlLmNvc3QuRykgKyBwYXJzZUZsb2F0KG5Ob2RlLmNvc3QuSCk7CiAgICAgICAgY29uc29sZS5sb2coImVxdWF0aW9uczoiKTsKICAgICAgICBjb25zb2xlLmxvZyhuTm9kZS5kaXN0YW5jZSArICIgKyAiICsgbk5vZGUuY29zdC5IICsgIiA9ICIgKyBuTm9kZS5jb3N0LkYpOwogICAgICAgIGlmICghb3Blbmxpc3QuaW5jbHVkZXMobk5vZGUpKSB7CiAgICAgICAgICBvcGVubGlzdC5wdXNoKG5Ob2RlKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9CiAgcmV0dXJuIFtjbG9zZWRsaXN0LCBjYWxjdWxhdGVQYXRoKGZpbmlzaE5vZGUpXTsKfQpmdW5jdGlvbiBnZXRBbGxOZWlnaGJvcnMoZ3JpZCwgbm9kZSwgc2l6ZSkgewogIGNvbnN0IG5laWdoYm9ycyA9IFtdOwogIGNvbnN0IHBvaW50MiA9IG5vZGUucG9pbnQyOwogIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7CiAgICB2YXIgdGVtcE5vZGUgPSBncmlkW3BvaW50Ml1baV07CiAgICBpZiAoIXRlbXBOb2RlLmlzVmlzaXRlZCAmJiB0ZW1wTm9kZS5kaXN0YW5jZSA+IDApIHsKICAgICAgZ3JpZFtpXVtwb2ludDJdLmlzVmlzaXRlZCA9IHRydWU7CiAgICAgIC8vIGdyaWRbaV1bcG9pbnQyXS5kaXN0YW5jZSArPSBub2RlLmRpc3RhbmNlOwogICAgICAvLyBncmlkW3BvaW50Ml1baV0uZGlzdGFuY2UgKz0gbm9kZS5kaXN0YW5jZTsKICAgICAgbmVpZ2hib3JzLnB1c2godGVtcE5vZGUpOwogICAgfQogIH0KICByZXR1cm4gbmVpZ2hib3JzOwp9CmZ1bmN0aW9uIGNhbGN1bGF0ZVBhdGgoZmluaXNoTm9kZSkgewogIGNvbnN0IHNob3J0ZXN0UGF0aE5vZGVzID0gW107CiAgbGV0IGN1cnJlbnROb2RlID0gZmluaXNoTm9kZTsKICB3aGlsZSAoY3VycmVudE5vZGUgIT09IG51bGwpIHsKICAgIHNob3J0ZXN0UGF0aE5vZGVzLnVuc2hpZnQoY3VycmVudE5vZGUpOwogICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5wcmV2aW91c05vZGU7CiAgfQogIHJldHVybiBzaG9ydGVzdFBhdGhOb2RlczsKfQ=="},{"version":3,"names":["astar","grid","startNode","finishNode","size","heuristic","closedlist","openlist","startH","find","h","node","point2","cost","F","G","H","hval","console","log","push","length","sort","a","b","parseFloat","current","shift","calculatePath","neighbors","getAllNeighbors","i","nNode","hNode","isVisited","includes","tentativeG","distance","previousNode","tempNode","shortestPathNodes","currentNode","unshift"],"sources":["/home/alya/project/Pathfinding/src/algorithms/astar.js"],"sourcesContent":["export function astar(grid, startNode, finishNode, size, heuristic) {\r\n  const closedlist = [];\r\n  const openlist = [];\r\n  const startH = heuristic.find((h) => h.node === startNode.point2);\r\n  startNode.cost = {\r\n    F: 0.0,\r\n    G: 0.0,\r\n    H:startH.hval\r\n  };\r\n  console.log(\"clicking a*\")\r\n  openlist.push(startNode);\r\n\r\n  while (openlist.length > 0) {\r\n    openlist.sort((a, b) => parseFloat(a.cost.F) - parseFloat(b.cost.F));\r\n    const current = openlist.shift();\r\n\r\n    closedlist.push(current);\r\n    console.log(current);\r\n\r\n    if (current.point2 === finishNode)\r\n      return [closedlist, calculatePath(current)];\r\n\r\n    const neighbors = getAllNeighbors(grid, current, size);\r\n\r\n    for (let i = 0; i < neighbors.length; i++) {\r\n      const nNode = neighbors[i];\r\n      const hNode = heuristic.find( (h) => h.node === nNode.point2);\r\n      nNode.isVisited = true;\r\n      if (closedlist.includes(nNode)) continue;\r\n\r\n      let tentativeG = current.cost.G  + nNode.distance;\r\n\r\n      nNode.previousNode = current;\r\n\r\n      if (tentativeG < (nNode.distance)) {\r\n        nNode.cost.H = parseFloat(hNode.hval);\r\n        nNode.cost.G =   parseFloat(tentativeG);\r\n        nNode.cost.F =  parseFloat(nNode.cost.G) + parseFloat(nNode.cost.H);\r\n        console.log(\"equations:\");\r\n        console.log( nNode.distance +\" + \"+ nNode.cost.H+\" = \"+ nNode.cost.F )\r\n          \r\n        if (!openlist.includes(nNode)) {\r\n         \r\n          openlist.push(nNode);\r\n        }\r\n      }\r\n      \r\n\r\n     \r\n      \r\n      \r\n\r\n    }\r\n  }\r\n  return [closedlist, calculatePath(finishNode)];\r\n}\r\n\r\n\r\nfunction getAllNeighbors(grid, node, size) {\r\n  const neighbors = [];\r\n  const point2 = node.point2;\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    var tempNode = grid[point2][i];\r\n    if (!tempNode.isVisited && tempNode.distance > 0) {\r\n      grid[i][point2].isVisited = true;\r\n      // grid[i][point2].distance += node.distance;\r\n      // grid[point2][i].distance += node.distance;\r\n      neighbors.push(tempNode);\r\n    }\r\n  }\r\n  return neighbors;\r\n}\r\n\r\nfunction calculatePath(finishNode) {\r\n  const shortestPathNodes = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    shortestPathNodes.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return shortestPathNodes;\r\n}\r\n"],"mappings":"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"}]}