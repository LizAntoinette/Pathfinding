{"remainingRequest":"/home/alya/project/Pathfinding/node_modules/babel-loader/lib/index.js!/home/alya/project/Pathfinding/node_modules/eslint-loader/index.js??ref--12-0!/home/alya/project/Pathfinding/src/algorithms/depthFirstSearch.js","dependencies":[{"path":"/home/alya/project/Pathfinding/src/algorithms/depthFirstSearch.js","mtime":1677239260910},{"path":"/home/alya/project/Pathfinding/node_modules/cache-loader/dist/cjs.js","mtime":1676881085187},{"path":"/home/alya/project/Pathfinding/node_modules/babel-loader/lib/index.js","mtime":1676881153360},{"path":"/home/alya/project/Pathfinding/node_modules/eslint-loader/index.js","mtime":1676881105757}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGZ1bmN0aW9uIGRmcyhncmlkLCBzdGFydE5vZGUsIGZpbmlzaE5vZGUsIHNpemUpIHsKICBjb25zdCBzdGFjayA9IFtdOwogIGNvbnN0IHZpc2l0ZWROb2Rlc0luT3JkZXIgPSBbXTsKICBzdGFydE5vZGUuaXNWaXNpdGVkID0gdHJ1ZTsKICBzdGFjay5wdXNoKHN0YXJ0Tm9kZSk7CiAgdmlzaXRlZE5vZGVzSW5PcmRlci5wdXNoKHN0YXJ0Tm9kZSk7CiAgd2hpbGUgKHN0YWNrLmxlbmd0aCA+IDApIHsKICAgIGxldCBub2RlID0gc3RhY2sucG9wKCk7CiAgICBpZiAoZmluaXNoTm9kZSA9PT0gbm9kZS5wb2ludDIpIHJldHVybiBbdmlzaXRlZE5vZGVzSW5PcmRlciwgY2FsY3VsYXRlUGF0aChub2RlKV07CiAgICBjb25zdCBuZWlnaGJvcnMgPSBnZXRBbGxOZWlnaGJvcnMoZ3JpZCwgbm9kZSwgc2l6ZSk7CiAgICBmb3IgKGNvbnN0IG5laWdoYm9yIG9mIG5laWdoYm9ycykgewogICAgICBuZWlnaGJvci5pc1Zpc2l0ZWQgPSB0cnVlOwogICAgICBuZWlnaGJvci5wcmV2aW91c05vZGUgPSBub2RlOwogICAgICB2aXNpdGVkTm9kZXNJbk9yZGVyLnB1c2gobmVpZ2hib3IpOwogICAgICBzdGFjay5wdXNoKG5laWdoYm9yKTsKICAgIH0KICB9CiAgcmV0dXJuIFt2aXNpdGVkTm9kZXNJbk9yZGVyLCBjYWxjdWxhdGVQYXRoKHN0YXJ0Tm9kZSldOwp9CmZ1bmN0aW9uIGNhbGN1bGF0ZVBhdGgoZmluaXNoTm9kZSkgewogIGNvbnN0IHNob3J0ZXN0UGF0aE5vZGVzID0gW107CiAgbGV0IGN1cnJlbnROb2RlID0gZmluaXNoTm9kZTsKICB3aGlsZSAoY3VycmVudE5vZGUgIT09IG51bGwpIHsKICAgIHNob3J0ZXN0UGF0aE5vZGVzLnVuc2hpZnQoY3VycmVudE5vZGUpOwogICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5wcmV2aW91c05vZGU7CiAgfQogIHJldHVybiBzaG9ydGVzdFBhdGhOb2RlczsKfQpmdW5jdGlvbiBnZXRBbGxOZWlnaGJvcnMoZ3JpZCwgbm9kZSwgc2l6ZSkgewogIGNvbnN0IG5laWdoYm9ycyA9IFtdOwogIGNvbnN0IHBvaW50MiA9IG5vZGUucG9pbnQyOwogIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7CiAgICB2YXIgdGVtcE5vZGUgPSBncmlkW3BvaW50Ml1baV07CiAgICBpZiAoISh0ZW1wTm9kZS5pc1Zpc2l0ZWQgJiYgZ3JpZFtpXVtwb2ludDJdLmlzVmlzaXRlZCkgJiYgdGVtcE5vZGUuZGlzdGFuY2UgPiAwKSB7CiAgICAgIG5laWdoYm9ycy5wdXNoKHRlbXBOb2RlKTsKICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBzaXplOyBqKyspIHsKICAgICAgICBncmlkW2ldW2pdLmlzVmlzaXRlZCA9IHRydWU7CiAgICAgIH0KICAgIH0KICB9CiAgcmV0dXJuIG5laWdoYm9yczsKfQ=="},{"version":3,"names":["dfs","grid","startNode","finishNode","size","stack","visitedNodesInOrder","isVisited","push","length","node","pop","point2","calculatePath","neighbors","getAllNeighbors","neighbor","previousNode","shortestPathNodes","currentNode","unshift","i","tempNode","distance","j"],"sources":["/home/alya/project/Pathfinding/src/algorithms/depthFirstSearch.js"],"sourcesContent":["export function dfs(grid, startNode, finishNode, size) {\r\n  const stack = [];\r\n  const visitedNodesInOrder = [];\r\n\r\n  startNode.isVisited = true;\r\n  stack.push(startNode);\r\n  visitedNodesInOrder.push(startNode);\r\n\r\n  while (stack.length>0) {\r\n      let node = stack.pop();\r\n\r\n      if (finishNode === node.point2)\r\n          return [visitedNodesInOrder, calculatePath(node)];\r\n\r\n\r\n      const neighbors = getAllNeighbors(grid, node, size);\r\n\r\n      for (const neighbor of neighbors) {\r\n          neighbor.isVisited = true;\r\n          neighbor.previousNode = node;\r\n          visitedNodesInOrder.push(neighbor);\r\n          stack.push(neighbor);\r\n      }\r\n  }\r\n\r\n  return [visitedNodesInOrder, calculatePath(startNode)];\r\n}\r\n\r\nfunction calculatePath(finishNode) {\r\n  const shortestPathNodes = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n      shortestPathNodes.unshift(currentNode);\r\n      currentNode = currentNode.previousNode;\r\n  }\r\n  return shortestPathNodes;\r\n}\r\n\r\n\r\n  \r\nfunction getAllNeighbors(grid, node, size) {\r\n\r\n  const neighbors = [];\r\n  const point2 = node.point2;\r\n    \r\n  for(let i=0; i <size; i++){\r\n    var tempNode = grid[point2][i]; \r\n    if((!(tempNode.isVisited && grid[i][point2].isVisited)) && tempNode.distance > 0){\r\n        neighbors.push(tempNode);\r\n        for(let j=0; j <size; j++){\r\n          grid[i][j].isVisited = true;\r\n        }\r\n    }\r\n    \r\n  }\r\n\r\n    return neighbors;\r\n}\r\n  "],"mappings":"AAAA,OAAO,SAASA,GAAG,CAACC,IAAI,EAAEC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAE;EACrD,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,mBAAmB,GAAG,EAAE;EAE9BJ,SAAS,CAACK,SAAS,GAAG,IAAI;EAC1BF,KAAK,CAACG,IAAI,CAACN,SAAS,CAAC;EACrBI,mBAAmB,CAACE,IAAI,CAACN,SAAS,CAAC;EAEnC,OAAOG,KAAK,CAACI,MAAM,GAAC,CAAC,EAAE;IACnB,IAAIC,IAAI,GAAGL,KAAK,CAACM,GAAG,EAAE;IAEtB,IAAIR,UAAU,KAAKO,IAAI,CAACE,MAAM,EAC1B,OAAO,CAACN,mBAAmB,EAAEO,aAAa,CAACH,IAAI,CAAC,CAAC;IAGrD,MAAMI,SAAS,GAAGC,eAAe,CAACd,IAAI,EAAES,IAAI,EAAEN,IAAI,CAAC;IAEnD,KAAK,MAAMY,QAAQ,IAAIF,SAAS,EAAE;MAC9BE,QAAQ,CAACT,SAAS,GAAG,IAAI;MACzBS,QAAQ,CAACC,YAAY,GAAGP,IAAI;MAC5BJ,mBAAmB,CAACE,IAAI,CAACQ,QAAQ,CAAC;MAClCX,KAAK,CAACG,IAAI,CAACQ,QAAQ,CAAC;IACxB;EACJ;EAEA,OAAO,CAACV,mBAAmB,EAAEO,aAAa,CAACX,SAAS,CAAC,CAAC;AACxD;AAEA,SAASW,aAAa,CAACV,UAAU,EAAE;EACjC,MAAMe,iBAAiB,GAAG,EAAE;EAC5B,IAAIC,WAAW,GAAGhB,UAAU;EAC5B,OAAOgB,WAAW,KAAK,IAAI,EAAE;IACzBD,iBAAiB,CAACE,OAAO,CAACD,WAAW,CAAC;IACtCA,WAAW,GAAGA,WAAW,CAACF,YAAY;EAC1C;EACA,OAAOC,iBAAiB;AAC1B;AAIA,SAASH,eAAe,CAACd,IAAI,EAAES,IAAI,EAAEN,IAAI,EAAE;EAEzC,MAAMU,SAAS,GAAG,EAAE;EACpB,MAAMF,MAAM,GAAGF,IAAI,CAACE,MAAM;EAE1B,KAAI,IAAIS,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAEjB,IAAI,EAAEiB,CAAC,EAAE,EAAC;IACxB,IAAIC,QAAQ,GAAGrB,IAAI,CAACW,MAAM,CAAC,CAACS,CAAC,CAAC;IAC9B,IAAI,EAAEC,QAAQ,CAACf,SAAS,IAAIN,IAAI,CAACoB,CAAC,CAAC,CAACT,MAAM,CAAC,CAACL,SAAS,CAAC,IAAKe,QAAQ,CAACC,QAAQ,GAAG,CAAC,EAAC;MAC7ET,SAAS,CAACN,IAAI,CAACc,QAAQ,CAAC;MACxB,KAAI,IAAIE,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAEpB,IAAI,EAAEoB,CAAC,EAAE,EAAC;QACxBvB,IAAI,CAACoB,CAAC,CAAC,CAACG,CAAC,CAAC,CAACjB,SAAS,GAAG,IAAI;MAC7B;IACJ;EAEF;EAEE,OAAOO,SAAS;AACpB"}]}