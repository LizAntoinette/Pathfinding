{"remainingRequest":"/home/alya/project/Pathfinding/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alya/project/Pathfinding/src/components/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/alya/project/Pathfinding/src/components/Index.vue","mtime":1676880512337},{"path":"/home/alya/project/Pathfinding/node_modules/cache-loader/dist/cjs.js","mtime":1676881085187},{"path":"/home/alya/project/Pathfinding/node_modules/babel-loader/lib/index.js","mtime":1676881153360},{"path":"/home/alya/project/Pathfinding/node_modules/cache-loader/dist/cjs.js","mtime":1676881085187},{"path":"/home/alya/project/Pathfinding/node_modules/vue-loader/lib/index.js","mtime":1676881168702}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";AA0KA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"Index.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<div class=\"row\">\r\n<div class=\"sidebar\">\r\n        <h1 class=\"mt-4\">Pathfinding</h1>\r\n        <h1> Visualizer</h1>\r\n        <div class=\"grid-container mx-4 mt-3\">\r\n          <div class=\"button-div1 mx-3\">\r\n             <b-dropdown block class=\"ml-2 algobtn \" :text=\"selectedItem\" v-model=\"selectedItem\">\r\n                <b-dropdown-header id=\"unweighted\">\r\n                  Unweighted\r\n                </b-dropdown-header>\r\n                <b-dropdown-item-button @click=\"selectedItem = 'BFS'\"  aria-describedby=\"unweighted\">\r\n                  BFS\r\n                </b-dropdown-item-button>\r\n                <b-dropdown-item-button @click=\"selectedItem = 'DFS'\"  aria-describedby=\"unweighted\">\r\n                  DFS\r\n                </b-dropdown-item-button>\r\n                <b-dropdown-header id=\"weighted\">\r\n                  Weighted\r\n                </b-dropdown-header>\r\n                <b-dropdown-item-button @click=\"selectedItem = 'Uniform Cost'\"  aria-describedby=\"unweighted\">\r\n                  Uniform Cost\r\n                </b-dropdown-item-button>\r\n                <b-dropdown-item-button @click=\"selectedItem = 'Greedy BFS'\"  aria-describedby=\"unweighted\">\r\n                  Greedy BFS\r\n                </b-dropdown-item-button>\r\n                <b-dropdown-item-button @click=\"selectedItem = 'A*'\"  aria-describedby=\"unweighted\">\r\n                  A*\r\n                </b-dropdown-item-button>\r\n              \r\n            </b-dropdown>\r\n          </div>\r\n          <div class=\"button-div2 ml-4 mr-2 mt-2\">\r\n             <b-button block disabled> Reset </b-button>\r\n          </div>\r\n          <div class=\"button-div3 mr-3 mt-2\">\r\n              <b-button block disabled > Save Graph </b-button>\r\n          </div>\r\n          <div class=\"button-div4\">\r\n             <h6 class=\"mt-3\"> <b>Add to Graph </b></h6>\r\n          </div>\r\n          <div class=\"button-div5 ml-4 mr-2 mt-2\">\r\n              <b-button block class=\"btn btn-secondary\" @click=\"addingVertex\" >\r\n                Vertex\r\n              </b-button>\r\n          </div>\r\n          <div class=\"button-div6 mr-3 mt-2\">\r\n             <b-button block  class=\"btn btn-secondary\" @click=\"addingConnection\">\r\n                Connection\r\n              </b-button>\r\n          </div>\r\n          <!--  <div class=\"button-div7\"> -->\r\n            <b-form inline class=\"button-div7 mx-3 mb-2\" > \r\n              <div class=\"button-div10 mx-2 \">\r\n              \r\n                  <label class=\"\" for=\"start-node\">Start node:</label>\r\n                  <b-form-select\r\n                    @change=\"changeColorStart\"\r\n                    id=\"start-node\"\r\n                    class=\"\"\r\n                    :options=\"optionsStartNode\"\r\n                    v-model=\"startNode\"\r\n                    :value=\"null\"\r\n                  ></b-form-select>\r\n              </div>\r\n              <div class=\"button-div11\">\r\n                <label class=\"\" for=\"end-node\">Goal node:</label>\r\n                <b-form-select\r\n                  id=\"end-node\"\r\n                  class=\"\"\r\n                  @change=\"changeColorGoal\"\r\n                  :options=\"optionsGoalNode\"\r\n                  v-model=\"goalNode\"\r\n                  :value=\"null\"\r\n                ></b-form-select>\r\n              </div>\r\n            </b-form>\r\n         \r\n        \r\n          <!-- </div> -->\r\n          <!-- <div class=\"button-div7\"></div>\r\n          <div class=\"button-div8\"></div> -->\r\n          <div class=\"button-div8 ml-3 mr-4\">\r\n             <b-button block class=\"btn ml-2 mr-3 btn-secondary\" @click=\"runGraph\">Visualize Algo</b-button>\r\n          </div>\r\n          <div class=\"button-div9 ml-3 mr-4\">\r\n             <b-button block class=\"btn ml-2 mr-3 btn-secondary \" >Clear Graph</b-button>\r\n          </div>\r\n        </div>\r\n       \r\n      \r\n    </div>\r\n\r\n\r\n    <div class=\"main container\">\r\n        <!-- <p> For the are viewers out there.. if you see this text, it means this is still under development. But you can view the algorithms, it's already done.. </p> -->\r\n      \r\n         <div class=\"row pt-5 ml-5\">\r\n             <b-card class=\"col-11 drawArea\" style=\"height: 30rem\">\r\n                <v-stage\r\n          :config=\"stageSize\"\r\n          @click=\"handleClick\"\r\n          ref=\"konva\"\r\n          @mousedown=\"handleMouseDown\"\r\n          @mouseup=\"handleMouseUp\"\r\n          @mousemove=\"handleMouseMove\"\r\n        >\r\n          <v-layer>\r\n            <v-line\r\n              v-for=\"line in connections\"\r\n              :key=\"line.id\"\r\n              :config=\"{\r\n                stroke: 'black',\r\n                points: line.points,\r\n                id: line.id\r\n                \r\n              }\"\r\n            />\r\n\r\n            <v-circle\r\n              \r\n              v-for=\"(item, index) in list\"\r\n              :key=\"item.id\"\r\n\r\n              :config=\"{\r\n                x: item.x,\r\n                y: item.y,\r\n                \r\n                radius: 15,\r\n                fill: '#a20417',\r\n                //draggable:true,\r\n                stroke: '#a20417',\r\n                strokeWidth: 2,\r\n                id:'circle'+index\r\n              }\"\r\n            ></v-circle>\r\n            <v-text\r\n              v-for=\"(item, index) in list\"\r\n              :key=\"item.id\"\r\n              :config=\"{\r\n                x: item.x + 11,\r\n                y: item.y + 11,\r\n                text: index,\r\n                fontSize: 15,\r\n                width: 300,\r\n              }\" \r\n            ></v-text>\r\n            <v-text\r\n              v-for=\"label in distances\"\r\n              :key=\"label.id\"\r\n              :config=\"{\r\n                x: label.x,\r\n                y: label.y,\r\n                text: label.distance,\r\n              }\"\r\n            />\r\n            <p class=\"text-left\">Click Vertex button and click here to add vertex</p>\r\n            <v-text :key=\"label_txt\" :config=\"{ text: 'Click Vertex button and click here to add vertex'}\"/>\r\n                  </v-layer>\r\n                </v-stage>\r\n             </b-card>\r\n\r\n         </div>\r\n        \r\n    </div>\r\n\r\n</div>\r\n  \r\n</template>\r\n<script>\r\nimport {bfs} from '../algorithms/breadthFirstSearch';\r\nimport {dfs} from '../algorithms/depthFirstSearch';\r\nimport {greedyBFS} from '../algorithms/greedyBestFirstSearch';\r\nimport {astar} from '../algorithms/astar';\r\nimport {uniformCost} from '../algorithms/uniformCost';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      grid: null,\r\n      startNode: null,\r\n      goalNode: null,\r\n      prevStartNode: '',\r\n      prevGoalNode:'',\r\n      optionsStartNode:[],   \r\n      list: [],\r\n      edges: [],\r\n      distances: [],\r\n      connection: false,\r\n      vertex: false,\r\n\r\n      connections: [],\r\n      drawningLine: false,\r\n      runnableGraph: false,\r\n      selectedItem: \"Algorithms\",\r\n      coor: \"\",\r\n      stageSize: {\r\n          width: 200,\r\n          height: 200,\r\n        },\r\n        theStage:[]\r\n      };\r\n  },\r\n  created: function() {\r\n     this.initializeGrid();\r\n  },\r\n  mounted: function () {\r\n    //For Dynamic Stage Size\r\n    const container = document.querySelector(\".drawArea\");\r\n    const observer = new ResizeObserver(() => {\r\n      this.stageSize.width = container.offsetWidth;\r\n      this.stageSize.height = container.offsetHeight;\r\n    });\r\n    observer.observe(container);\r\n  },\r\n \r\n  computed:{\r\n   \r\n    optionsGoalNode(){\r\n        return this.optionsStartNode.filter((node) => {\r\n            return node !== this.startNode;\r\n        \r\n        });\r\n    }   \r\n  },\r\n\r\n  \r\n  methods: {\r\n    \r\n    addingConnection() {\r\n      this.connection = !this.connection;\r\n      this.vertex = false;\r\n      \r\n    },\r\n    addingVertex() {\r\n      this.connection = false;\r\n      this.vertex = !this.vertex;\r\n    },\r\n\r\n    handleClick(evt) {\r\n      if (this.vertex && this.list.length < 20) {\r\n        this.optionsStartNode.push(this.list.length);\r\n        const stage = evt.target.getStage();\r\n        const pos = stage.getPointerPosition();\r\n        this.list.push(pos);\r\n        this.theStage = stage;\r\n      \r\n      }\r\n    },\r\n    changeColorStart(){\r\n        var tween;\r\n       \r\n        var id = \"#circle\"+this.startNode;\r\n        \r\n        console.log(id);\r\n        const stage = this.theStage;\r\n\r\n       \r\n        var shape = stage.findOne(id);\r\n         \r\n\r\n        if (tween) {\r\n          tween.destroy();\r\n        }\r\n\r\n        if(this.prevStartNode !== ''){\r\n          console.log(this.prevStartNode);\r\n          var prevShape = stage.findOne(this.prevStartNode);\r\n          tween = new Konva.Tween({\r\n            node: prevShape,\r\n            fill:\"#a20417\",\r\n            stroke:\"#a20417\"\r\n          }).play();\r\n          \r\n        }\r\n\r\n        tween = new Konva.Tween({\r\n          node: shape,\r\n          fill:\"#2f9c6e\",\r\n          stroke:\"#2f9c6e\"\r\n        }).play();\r\n        \r\n        this.prevStartNode = id;\r\n\r\n    },\r\n    changeColorGoal(){\r\n        var tween;\r\n       \r\n        var id = \"#circle\"+this.goalNode;\r\n        console.log(id);\r\n        const stage = this.theStage;\r\n\r\n       \r\n        var shape = stage.findOne(id);\r\n         \r\n\r\n        if (tween) {\r\n          tween.destroy();\r\n        } \r\n        \r\n        if(this.prevGoalNode !== ''){\r\n          var prevShape = stage.findOne(this.prevGoalNode);\r\n          tween = new Konva.Tween({\r\n            node: prevShape,\r\n            fill:\"#a20417\",\r\n            stroke:\"#a20417\"\r\n          }).play();\r\n         \r\n        }\r\n\r\n        tween = new Konva.Tween({\r\n          node: shape,\r\n          fill:\"#004019\",\r\n          stroke:\"#004019\"\r\n        }).play();\r\n        \r\n        this.prevGoalNode = id;\r\n    },\r\n    handleMouseDown(e) {\r\n      if (this.connection) {\r\n        const onCircle = e.target instanceof Konva.Circle;\r\n        if (!onCircle) {\r\n          return;\r\n        }\r\n        this.drawningLine = true;\r\n        this.connections.push({\r\n          id: Date.now(),\r\n          points: [e.target.x(), e.target.y()],\r\n        });\r\n      }\r\n    },\r\n    handleMouseMove(e) {\r\n      if (this.connection) {\r\n        if (!this.drawningLine) {\r\n          return;\r\n        }\r\n        const pos = e.target.getStage().getPointerPosition();\r\n        const lastLine = this.connections[this.connections.length - 1];\r\n        lastLine.points = [\r\n          lastLine.points[0],\r\n          lastLine.points[1],\r\n          pos.x,\r\n          pos.y,\r\n        ];\r\n      }\r\n    },\r\n    handleMouseUp(e) {\r\n      if (this.connection) {\r\n        const onCircle = e.target instanceof Konva.Circle;\r\n        if (!onCircle) {\r\n          return;\r\n        }\r\n        this.drawningLine = false;\r\n        const lastLine = this.connections[this.connections.length - 1];\r\n        const indexOfPoint1 = this.list.findIndex(function (point) {\r\n          return (\r\n            point.x === lastLine.points[0] && point.y === lastLine.points[1]\r\n          );\r\n        });\r\n        const indexOfPoint2 = this.list.findIndex(function (point) {\r\n          return point.x === e.target.x() && point.y === e.target.y();\r\n        });\r\n        console.log(\"Point1 = \" + indexOfPoint1 + \" Point2 = \" + indexOfPoint2);\r\n        var dist = Math.sqrt(\r\n          Math.pow(e.target.x() - lastLine.points[0], 2) +\r\n            Math.pow(e.target.y() - lastLine.points[1], 2)\r\n        );\r\n        this.distances.push({\r\n          id: Date.now(),\r\n          distance: dist.toFixed(2),\r\n          x:\r\n            Math.min(e.target.x(), lastLine.points[0]) +\r\n            Math.abs(e.target.x() - lastLine.points[0]) / 2 +\r\n            4,\r\n          y:\r\n            Math.min(e.target.y(), lastLine.points[1]) +\r\n            Math.abs(e.target.y() - lastLine.points[1]) / 2 +\r\n            4,\r\n        });\r\n        this.grid[indexOfPoint1][indexOfPoint2] = this.createNode(indexOfPoint1, indexOfPoint2, dist.toFixed(2));\r\n        this.grid[indexOfPoint2][indexOfPoint1] = this.createNode(indexOfPoint2, indexOfPoint1, dist.toFixed(2));\r\n        console.log(this.grid);\r\n        console.log(this.distances);\r\n        lastLine.id= \"line\"+indexOfPoint1+indexOfPoint2;\r\n        lastLine.points = [\r\n          lastLine.points[0],\r\n          lastLine.points[1],\r\n          e.target.x(),\r\n          e.target.y(),\r\n        ];\r\n        console.log(\"The connections\");\r\n        console.log(this.connections);\r\n        console.log(this.list);\r\n        if(this.connections.length < 2){\r\n            this.runnableGraph = true\r\n        }\r\n      }\r\n    },\r\n    clearScreen() {\r\n      this.list = [];\r\n      this.connections = null;\r\n      this.distances = null;\r\n      this.startNode = 0;\r\n      this.goalNode = 0;\r\n      this.optionsGoalNode = null;\r\n      this.optionsStartNode = null;\r\n    },\r\n    createHeuristic(node){\r\n       const size = this.list.length;\r\n       const endNode= this.list[node];\r\n       let heuristic = [];\r\n       \r\n\r\n       for(let i =0; i < size; i++){\r\n         var dist = Math.sqrt(\r\n            Math.pow(endNode.x - this.list[i].x, 2) +\r\n              Math.pow(endNode.y - this.list[i].y, 2)\r\n          );\r\n         heuristic.push({node: i, hval: dist});\r\n       }\r\n\r\n       return heuristic;\r\n\r\n    },\r\n    initializeGrid(){\r\n      const grid = [];\r\n      for (let row = 0; row < 20; row++) {\r\n        const currentRow = [];\r\n        for (let col = 0; col < 20; col++) {\r\n          currentRow.push(this.createNode(row, col, 0));\r\n        }\r\n        grid.push(currentRow);\r\n      }\r\n      this.grid = grid;\r\n      console.log('This is the Initialized Grid');\r\n      console.log(this.grid);\r\n    },\r\n\r\n    //\r\n    createNode(x, y, dist){\r\n      return {\r\n        point1: x,\r\n        point2: y,\r\n        distance: dist,\r\n        isVisited: false,\r\n        previousNode: null,\r\n        cost: {\r\n                F: Infinity,\r\n                G: Infinity,\r\n                H: Infinity,\r\n            },\r\n      }\r\n\r\n    },\r\n    \r\n    animateAlgorithm(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n      \r\n      \r\n      for (let i = 1; i < visitedNodesInOrder.length; i++) {\r\n        \r\n          setTimeout(() => {\r\n                this.colorNode(visitedNodesInOrder[i], \"#ed81c4\");\r\n          }, i*800);\r\n         \r\n\r\n        }\r\n        setTimeout(() => {\r\n                this.animateShortestPath(nodesInShortestPathOrder);\r\n        }, visitedNodesInOrder.length*800);\r\n        \r\n    },\r\n\r\n  colorNode(visitedNode, color){\r\n          let stage = this.theStage;\r\n          var tweenShape, tweenLine;\r\n          var connections = this.connections;\r\n          const node = visitedNode;\r\n\r\n          var idCircle = \"#circle\"+node.point2;\r\n          console.log(idCircle);\r\n          var shape = stage.findOne(idCircle);\r\n          \r\n\r\n          \r\n          var idLine = \"line\"+node.point1+node.point2;\r\n          var idLine2 = \"line\"+node.point2+node.point1;\r\n          let idL =connections.filter(line => line.id === idLine|| line.id === idLine2);\r\n\r\n        \r\n          var idOfLine = \"#\"+idL[0].id;\r\n          var line = stage.findOne(idOfLine);\r\n\r\n        \r\n          tweenLine = new Konva.Tween({\r\n              node: line,\r\n              \r\n              fill:color,\r\n              stroke:color\r\n          }).play();\r\n          console.log(\"Line is working\");\r\n          \r\n          tweenShape = new Konva.Tween({\r\n            node: shape,\r\n        \r\n            fill:color,\r\n            stroke:color\r\n          }).play();\r\n         \r\n         console.log(\"Shape is working\");\r\n  },\r\n\r\n  animateShortestPath(nodesInShortestPathOrder) {\r\n    \r\n    for (let i = 1; i < nodesInShortestPathOrder.length; i++) {\r\n          \r\n          setTimeout(() => {\r\n                this.colorNode(nodesInShortestPathOrder[i], \"#ed4255\");\r\n          }, i*500);\r\n       \r\n    }\r\n  },\r\n    visualizeBFS(){\r\n       const STARTNODE = this.grid[this.startNode][this.startNode];\r\n       const GOALNODE = this.goalNode;\r\n       const size = this.list.length;\r\n       const [visitedNodesInOrder, calculatedPath] = bfs(this.grid, STARTNODE, GOALNODE, size);\r\n       \r\n       this.animateAlgorithm(visitedNodesInOrder, calculatedPath);\r\n      \r\n    },\r\n    visualizeDFS(){\r\n       const STARTNODE = this.grid[this.startNode][this.startNode];\r\n       const GOALNODE = this.goalNode;\r\n       const size = this.list.length;\r\n       const [visitedNodesInOrder, calculatedPath] = dfs(this.grid, STARTNODE, GOALNODE, size);\r\n       \r\n       this.animateAlgorithm(visitedNodesInOrder, calculatedPath);\r\n      \r\n    },\r\n    visualizeAStar(){\r\n       const STARTNODE = this.grid[this.startNode][this.startNode];\r\n       const GOALNODE = this.goalNode;\r\n       const size = this.list.length;\r\n       const heuristic = this.createHeuristic(GOALNODE);\r\n       console.log(heuristic);\r\n       const [visitedNodesInOrder, calculatedPath] = astar(this.grid, STARTNODE, GOALNODE, size, heuristic );\r\n       console.log(\"The A* \")\r\n       console.log(visitedNodesInOrder);\r\n       console.log(calculatedPath);\r\n      this.animateAlgorithm(visitedNodesInOrder, calculatedPath);\r\n    },\r\n    visualizeGreedyBFS(){\r\n       const STARTNODE = this.grid[this.startNode][this.startNode];\r\n       const GOALNODE = this.goalNode;\r\n       const size = this.list.length;\r\n       const heuristic = this.createHeuristic(GOALNODE);\r\n       console.log(heuristic);\r\n       const [visitedNodesInOrder, calculatedPath] = greedyBFS(this.grid, STARTNODE, GOALNODE, size, heuristic );\r\n       console.log(\"The Greedy BFS \")\r\n       console.log(visitedNodesInOrder);\r\n       console.log(calculatedPath);\r\n      this.animateAlgorithm(visitedNodesInOrder, calculatedPath);\r\n    },\r\n    visualizeUniformCost(){\r\n       const STARTNODE = this.grid[this.startNode][this.startNode];\r\n       const GOALNODE = this.goalNode;\r\n       const size = this.list.length;\r\n       const heuristic = this.createHeuristic(GOALNODE);\r\n       console.log(heuristic);\r\n       const [visitedNodesInOrder, calculatedPath] = astar(this.grid, STARTNODE, GOALNODE, size, heuristic );\r\n       console.log(\"The A* \")\r\n       console.log(visitedNodesInOrder);\r\n       console.log(calculatedPath);\r\n      this.animateAlgorithm(visitedNodesInOrder, calculatedPath);\r\n    },\r\n  \r\n    runGraph(){\r\n       if(this.runnableGraph){\r\n          const item = this.selectedItem;\r\n          if(item === \"BFS\"){\r\n            this.visualizeBFS();\r\n          }\r\n          else if(item === \"DFS\"){\r\n            this.visualizeDFS();\r\n          }\r\n          else if (item === \"A*\"){\r\n            this.visualizeAStar();\r\n          }\r\n          else if (item === \"Greedy BFS\"){\r\n            this.visualizeGreedyBFS();\r\n          }\r\n          else if (item === \"Uniform Cost\"){\r\n            this.visualizeUniformCost();\r\n          }\r\n       }\r\n    },\r\n\r\n  }\r\n\r\n}\r\n</script>"]}]}